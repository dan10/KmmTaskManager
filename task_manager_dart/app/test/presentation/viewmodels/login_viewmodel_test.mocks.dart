// Mocks generated by Mockito 5.4.6 from annotations
// in task_manager_app/test/presentation/viewmodels/login_viewmodel_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:task_manager_app/data/repositories/auth_repository.dart' as _i3;
import 'package:task_manager_shared/models.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLoginResponseDto_0 extends _i1.SmartFake
    implements _i2.LoginResponseDto {
  _FakeLoginResponseDto_0(Object parent,
      Invocation parentInvocation,) : super(
    parent,
    parentInvocation,
  );
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i3.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.LoginResponseDto> login(String? email,
      String? password,) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            email,
            password,
          ],
        ),
        returnValue:
        _i4.Future<_i2.LoginResponseDto>.value(_FakeLoginResponseDto_0(
          this,
          Invocation.method(
            #login,
            [
              email,
              password,
            ],
          ),
        )),
      ) as _i4.Future<_i2.LoginResponseDto>);

  @override
  _i4.Future<_i2.LoginResponseDto> register(String? name,
      String? email,
      String? password,) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [
            name,
            email,
            password,
          ],
        ),
        returnValue:
        _i4.Future<_i2.LoginResponseDto>.value(_FakeLoginResponseDto_0(
          this,
          Invocation.method(
            #register,
            [
              name,
              email,
              password,
            ],
          ),
        )),
      ) as _i4.Future<_i2.LoginResponseDto>);

  @override
  _i4.Future<_i2.LoginResponseDto> googleLogin(String? idToken) =>
      (super.noSuchMethod(
        Invocation.method(
          #googleLogin,
          [idToken],
        ),
        returnValue:
        _i4.Future<_i2.LoginResponseDto>.value(_FakeLoginResponseDto_0(
          this,
          Invocation.method(
            #googleLogin,
            [idToken],
          ),
        )),
      ) as _i4.Future<_i2.LoginResponseDto>);

  @override
  _i4.Future<void> logout() =>
      (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<String?> getStoredToken() =>
      (super.noSuchMethod(
        Invocation.method(
          #getStoredToken,
          [],
        ),
        returnValue: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);

  @override
  _i4.Future<_i2.UserPublicResponseDto?> getCurrentUser() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCurrentUser,
          [],
        ),
        returnValue: _i4.Future<_i2.UserPublicResponseDto?>.value(),
      ) as _i4.Future<_i2.UserPublicResponseDto?>);

  @override
  _i4.Future<bool> isLoggedIn() =>
      (super.noSuchMethod(
        Invocation.method(
          #isLoggedIn,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}
