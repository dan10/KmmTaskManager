// Mocks generated by Mockito 5.4.6 from annotations
// in server/test/task_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;
import 'dart:convert' as _i2;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;
import 'package:postgres/src/client_messages.dart' as _i9;
import 'package:postgres/src/connection.dart' as _i4;
import 'package:postgres/src/execution_context.dart' as _i3;
import 'package:postgres/src/replication.dart' as _i6;
import 'package:postgres/src/server_messages.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEncoding_0 extends _i1.SmartFake implements _i2.Encoding {
  _FakeEncoding_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePostgreSQLResult_1 extends _i1.SmartFake
    implements _i3.PostgreSQLResult {
  _FakePostgreSQLResult_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PostgreSQLConnection].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostgreSQLConnection extends _i1.Mock
    implements _i4.PostgreSQLConnection {
  MockPostgreSQLConnection() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get host => (super.noSuchMethod(
        Invocation.getter(#host),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#host),
        ),
      ) as String);

  @override
  int get port => (super.noSuchMethod(
        Invocation.getter(#port),
        returnValue: 0,
      ) as int);

  @override
  String get databaseName => (super.noSuchMethod(
        Invocation.getter(#databaseName),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#databaseName),
        ),
      ) as String);

  @override
  bool get useSSL => (super.noSuchMethod(
        Invocation.getter(#useSSL),
        returnValue: false,
      ) as bool);

  @override
  int get timeoutInSeconds => (super.noSuchMethod(
        Invocation.getter(#timeoutInSeconds),
        returnValue: 0,
      ) as int);

  @override
  int get queryTimeoutInSeconds => (super.noSuchMethod(
        Invocation.getter(#queryTimeoutInSeconds),
        returnValue: 0,
      ) as int);

  @override
  String get timeZone => (super.noSuchMethod(
        Invocation.getter(#timeZone),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#timeZone),
        ),
      ) as String);

  @override
  bool get isUnixSocket => (super.noSuchMethod(
        Invocation.getter(#isUnixSocket),
        returnValue: false,
      ) as bool);

  @override
  bool get allowClearTextPassword => (super.noSuchMethod(
        Invocation.getter(#allowClearTextPassword),
        returnValue: false,
      ) as bool);

  @override
  _i6.ReplicationMode get replicationMode => (super.noSuchMethod(
        Invocation.getter(#replicationMode),
        returnValue: _i6.ReplicationMode.physical,
      ) as _i6.ReplicationMode);

  @override
  Map<String, String> get settings => (super.noSuchMethod(
        Invocation.getter(#settings),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  int get processID => (super.noSuchMethod(
        Invocation.getter(#processID),
        returnValue: 0,
      ) as int);

  @override
  _i7.Stream<_i4.Notification> get notifications => (super.noSuchMethod(
        Invocation.getter(#notifications),
        returnValue: _i7.Stream<_i4.Notification>.empty(),
      ) as _i7.Stream<_i4.Notification>);

  @override
  _i7.Stream<_i8.ServerMessage> get messages => (super.noSuchMethod(
        Invocation.getter(#messages),
        returnValue: _i7.Stream<_i8.ServerMessage>.empty(),
      ) as _i7.Stream<_i8.ServerMessage>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  _i2.Encoding get encoding => (super.noSuchMethod(
        Invocation.getter(#encoding),
        returnValue: _FakeEncoding_0(
          this,
          Invocation.getter(#encoding),
        ),
      ) as _i2.Encoding);

  @override
  int get queueSize => (super.noSuchMethod(
        Invocation.getter(#queueSize),
        returnValue: 0,
      ) as int);

  @override
  _i7.Future<dynamic> open() => (super.noSuchMethod(
        Invocation.method(
          #open,
          [],
        ),
        returnValue: _i7.Future<dynamic>.value(),
      ) as _i7.Future<dynamic>);

  @override
  _i7.Future<dynamic> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i7.Future<dynamic>.value(),
      ) as _i7.Future<dynamic>);

  @override
  void addMessage(_i9.ClientMessage? message) => super.noSuchMethod(
        Invocation.method(
          #addMessage,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<dynamic> transaction(
    _i7.Future<dynamic> Function(_i3.PostgreSQLExecutionContext)? queryBlock, {
    int? commitTimeoutInSeconds,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #transaction,
          [queryBlock],
          {#commitTimeoutInSeconds: commitTimeoutInSeconds},
        ),
        returnValue: _i7.Future<dynamic>.value(),
      ) as _i7.Future<dynamic>);

  @override
  void cancelTransaction({String? reason}) => super.noSuchMethod(
        Invocation.method(
          #cancelTransaction,
          [],
          {#reason: reason},
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<_i3.PostgreSQLResult> query(
    String? fmtString, {
    Map<String, dynamic>? substitutionValues,
    bool? allowReuse,
    int? timeoutInSeconds,
    bool? useSimpleQueryProtocol,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #query,
          [fmtString],
          {
            #substitutionValues: substitutionValues,
            #allowReuse: allowReuse,
            #timeoutInSeconds: timeoutInSeconds,
            #useSimpleQueryProtocol: useSimpleQueryProtocol,
          },
        ),
        returnValue:
            _i7.Future<_i3.PostgreSQLResult>.value(_FakePostgreSQLResult_1(
          this,
          Invocation.method(
            #query,
            [fmtString],
            {
              #substitutionValues: substitutionValues,
              #allowReuse: allowReuse,
              #timeoutInSeconds: timeoutInSeconds,
              #useSimpleQueryProtocol: useSimpleQueryProtocol,
            },
          ),
        )),
      ) as _i7.Future<_i3.PostgreSQLResult>);

  @override
  _i7.Future<List<Map<String, Map<String, dynamic>>>> mappedResultsQuery(
    String? fmtString, {
    Map<String, dynamic>? substitutionValues = const {},
    bool? allowReuse,
    int? timeoutInSeconds,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #mappedResultsQuery,
          [fmtString],
          {
            #substitutionValues: substitutionValues,
            #allowReuse: allowReuse,
            #timeoutInSeconds: timeoutInSeconds,
          },
        ),
        returnValue: _i7.Future<List<Map<String, Map<String, dynamic>>>>.value(
            <Map<String, Map<String, dynamic>>>[]),
      ) as _i7.Future<List<Map<String, Map<String, dynamic>>>>);

  @override
  _i7.Future<int> execute(
    String? fmtString, {
    Map<String, dynamic>? substitutionValues = const {},
    int? timeoutInSeconds,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [fmtString],
          {
            #substitutionValues: substitutionValues,
            #timeoutInSeconds: timeoutInSeconds,
          },
        ),
        returnValue: _i7.Future<int>.value(0),
      ) as _i7.Future<int>);
}
